NL input,Key Values,Cypher Query
Only a single actor is allowed to both create and clear the invoice for each purchase order (PO).,"Activity: [""Vendor creates invoice"", ""Clear Invoice""], EntityType: [""PO""], Actor: []","MATCH (e:Event)-[:CORR]->(ent:Entity {EntityType:""PO""}) WHERE e.Activity IN ['Vendor creates invoice', 'Clear Invoice'] WITH ent, COLLECT(DISTINCT e.Actor) as actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) > 1) THEN false ELSE true END AS ruleSatisfied"
"The same individual, and no one else, must handle both logging the goods receipt and recording the corresponding invoice receipt for every purchase order item (POI).","Activity: [""Record Goods Receipt"", ""Record Invoice Receipt""], EntityType: [""POI""], Actor: []","MATCH (e:Event)-[:CORR]->(ent:Entity {EntityType:""POI""}) WHERE e.Activity IN ['Record Goods Receipt', 'Record Invoice Receipt'] WITH ent, COLLECT(DISTINCT e.Actor) as actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) > 1) THEN false ELSE true END AS ruleSatisfied"
The person who receives an order confirmation for a POI is the only one permitted to adjust its quantity.,"Activity: [""Receive Order Confirmation"", ""Change Quantity""], EntityType: [""POI""], Actor: []","MATCH (e:Event)-[:CORR]->(ent:Entity {EntityType:""POI""}) WHERE e.Activity IN ['Receive Order Confirmation', 'Change Quantity'] WITH ent, COLLECT(DISTINCT e.Actor) as actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) > 1) THEN false ELSE true END AS ruleSatisfied"
Only the actor who initially creates a purchase order item has the authority to delete it.,"Activity: [""Create Purchase Order Item"", ""Delete Purchase Order Item""], EntityType: [""POI""], Actor: []","MATCH (e:Event)-[:CORR]->(ent:Entity {EntityType:""POI""}) WHERE e.Activity IN ['Create Purchase Order Item', 'Delete Purchase Order Item'] WITH ent, COLLECT(DISTINCT e.Actor) as actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) > 1) THEN false ELSE true END AS ruleSatisfied"
"For each purchase order (PO), the actor responsible for entering service completion must also be the only one allowed to record the corresponding goods receipt.","Activity: [""Record Service Entry Sheet"", ""Record Goods Receipt""], EntityType: [""PO""], Actor: []","MATCH (e:Event)-[:CORR]->(ent:Entity {EntityType:""PO""}) WHERE e.Activity IN ['Record Service Entry Sheet', 'Record Goods Receipt'] WITH ent, COLLECT(DISTINCT e.Actor) as actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) > 1) THEN false ELSE true END AS ruleSatisfied"
"For a given PO, the responsibility for both creating an invoice and registering its clearance in the system belongs exclusively to a single individual.","Activity: [""Vendor creates invoice"", ""Clear Invoice""], EntityType: [""PO""], Actor: []","MATCH (e:Event)-[:CORR]->(ent:Entity {EntityType:""PO""}) WHERE e.Activity IN ['Vendor creates invoice', 'Clear Invoice'] WITH ent, COLLECT(DISTINCT e.Actor) as actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) > 1) THEN false ELSE true END AS ruleSatisfied"
"For a given PO, a single responsible person, with no exceptions, must manage both the creation of a purchase order item and the confirmation of the corresponding order.","Activity: [""Create Purchase Order Item"", ""Receive Order Confirmation""], EntityType: [""PO""], Actor: []","MATCH (e:Event)-[:CORR]->(ent:Entity {EntityType:""PO""}) WHERE e.Activity IN ['Create Purchase Order Item', 'Receive Order Confirmation'] WITH ent, COLLECT(DISTINCT e.Actor) as actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) > 1) THEN false ELSE true END AS ruleSatisfied"
"The task of creating a purchase order item for  PO and recording its related invoice receipt must be performed by the same actor, and no other individual is allowed to take on these responsibilities.","Activity: [""Create Purchase Order Item"", ""Record Invoice Receipt""], EntityType: [""PO""], Actor: []","MATCH (e:Event)-[:CORR]->(ent:Entity {EntityType:""PO""}) WHERE e.Activity IN ['Create Purchase Order Item', 'Record Invoice Receipt'] WITH ent, COLLECT(DISTINCT e.Actor) as actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) > 1) THEN false ELSE true END AS ruleSatisfied"
"At least 3 events of type ""Create Purchase Order Item"" or ""Receive Order Confirmation"" must be performed for each purchase order.","Activity: [""Create Purchase Order Item"", ""Receive Order Confirmation""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (ent)<-[:CORR]-(event:Event) WHERE event.Activity IN ['Create Purchase Order Item', 'Receive Order Confirmation'] WITH ent, COUNT(event) AS eventCount WHERE eventCount < 3 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
Each purchase order item must be associated with at least 5 events where either an order is created or an invoice is issued by the vendor.,"Activity: [""Create Purchase Order Item"", ""Vendor creates invoice""], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""}) OPTIONAL MATCH (ent)<-[:CORR]-(event:Event) WHERE event.Activity IN ['Create Purchase Order Item', 'Vendor creates invoice'] WITH ent, COUNT(event) AS eventCount WHERE eventCount < 5 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
A purchase order should have at least two recorded receipts—either for goods or services.,"Activity: [""Record Goods Receipt"", ""Record Service Entry Sheet""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (ent)<-[:CORR]-(event:Event) WHERE event.Activity IN ['Record Goods Receipt', 'Record Service Entry Sheet'] WITH ent, COUNT(event) AS eventCount WHERE eventCount < 2 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
At least 4 activities related to quantity changes or order confirmations should be logged for each purchase order item.,"Activity: [""Change Quantity"", ""Receive Order Confirmation""], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""}) OPTIONAL MATCH (ent)<-[:CORR]-(event:Event) WHERE event.Activity IN ['Change Quantity', 'Receive Order Confirmation'] WITH ent, COUNT(event) AS eventCount WHERE eventCount < 4 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
"Every purchase order must have at least 3 events, either removing a payment block or clearing an invoice.","Activity: [""Remove Payment Block"", ""Clear Invoice""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (ent)<-[:CORR]-(event:Event) WHERE event.Activity IN ['Remove Payment Block', 'Clear Invoice'] WITH ent, COUNT(event) AS eventCount WHERE eventCount < 3 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
"For each purchase order item, there must be at least 6 relevant actions, which could include invoice recording or clearing.","Activity: [""Record Invoice Receipt"", ""Clear Invoice""], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""}) OPTIONAL MATCH (ent)<-[:CORR]-(event:Event) WHERE event.Activity IN ['Record Invoice Receipt', 'Clear Invoice'] WITH ent, COUNT(event) AS eventCount WHERE eventCount < 6 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
"Each ""PO"" must have at least 3 events of type ""Create Purchase Order Item"" or ""Receive Order Confirmation"".","Activity: [""Create Purchase Order Item"", ""Receive Order Confirmation""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (ent)<-[:CORR]-(event:Event) WHERE event.Activity IN ['Create Purchase Order Item', 'Receive Order Confirmation'] WITH ent, COUNT(event) AS eventCount WHERE eventCount < 3 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
"Each ""POI"" must be associated with at least 4 events where either ""Create Purchase Order Item"" or ""Vendor creates invoice"" occurs.","Activity: [""Create Purchase Order Item"", ""Vendor creates invoice""], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""}) OPTIONAL MATCH (ent)<-[:CORR]-(event:Event) WHERE event.Activity IN ['Create Purchase Order Item', 'Vendor creates invoice'] WITH ent, COUNT(event) AS eventCount WHERE eventCount < 4 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
"A ""PO"" must have at least 2 events of type ""Record Goods Receipt"" or ""Record Service Entry Sheet"".","Activity: [""Record Goods Receipt"", ""Record Service Entry Sheet""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (ent)<-[:CORR]-(event:Event) WHERE event.Activity IN ['Record Goods Receipt', 'Record Service Entry Sheet'] WITH ent, COUNT(event) AS eventCount WHERE eventCount < 2 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
A purchase requisition item must not be immediately followed by creating a purchase order item or the vendor issuing an invoice.,"Activity: [""Create Purchase Requisition Item"", ""Create Purchase Order Item"", ""Vendor creates invoice""], EntityType: [], Actor: []","MATCH (e1:Event {Activity: ""Create Purchase Requisition Item""})-[:DF]->(e2:Event) WHERE e2.Activity IN [""Create Purchase Order Item"", ""Vendor creates invoice""] RETURN COUNT(e1) = 0 AS ruleSatisfied"
Goods receipt must not be directly followed by recording an invoice receipt or clearing the invoice.,"Activity: [""Record Goods Receipt"", ""Record Invoice Receipt"", ""Clear Invoice""], EntityType: [], Actor: []","MATCH (e1:Event {Activity: ""Record Goods Receipt""})-[:DF]->(e2:Event) WHERE e2.Activity IN [""Record Invoice Receipt"", ""Clear Invoice""] RETURN COUNT(e1) = 0 AS ruleSatisfied"
"If a vendor creates an invoice, it must not be immediately followed by clearing the invoice or deleting a purchase order item.","Activity: [""Vendor creates invoice"", ""Clear Invoice"", ""Delete Purchase Order Item""], EntityType: [], Actor: []","MATCH (e1:Event {Activity: ""Vendor creates invoice""})-[:DF]->(e2:Event) WHERE e2.Activity IN [""Clear Invoice"", ""Delete Purchase Order Item""] RETURN COUNT(e1) = 0 AS ruleSatisfied"
No order confirmation should be followed immediately by removing a payment block or changing the order quantity.,"Activity: [""Receive Order Confirmation"", ""Remove Payment Block"", ""Change Quantity""], EntityType: [], Actor: []","MATCH (e1:Event {Activity: ""Receive Order Confirmation""})-[:DF]->(e2:Event) WHERE e2.Activity IN [""Remove Payment Block"", ""Change Quantity""] RETURN COUNT(e1) = 0 AS ruleSatisfied"
Deleting a purchase order item must not be immediately followed by changing the quantity or creating a new purchase order item.,"Activity: [""Delete Purchase Order Item"", ""Change Quantity"", ""Create Purchase Order Item""], EntityType: [], Actor: []","MATCH (e1:Event {Activity: ""Delete Purchase Order Item""})-[:DF]->(e2:Event) WHERE e2.Activity IN [""Change Quantity"", ""Create Purchase Order Item""] RETURN COUNT(e1) = 0 AS ruleSatisfied"
Recording a service entry sheet must not be followed directly by clearing an invoice or recording a goods receipt.,"Activity: [""Record Service Entry Sheet"", ""Clear Invoice"", ""Record Goods Receipt""], EntityType: [], Actor: []","MATCH (e1:Event {Activity: ""Record Service Entry Sheet""})-[:DF]->(e2:Event) WHERE e2.Activity IN [""Clear Invoice"", ""Record Goods Receipt""] RETURN COUNT(e1) = 0 AS ruleSatisfied"
"""Create Purchase Requisition Item"" must not be immediately followed by ""Create Purchase Order Item"" or ""Vendor creates invoice.""","Activity: [""Create Purchase Requisition Item"", ""Create Purchase Order Item"", ""Vendor creates invoice""], EntityType: [], Actor: []","MATCH (e1:Event {Activity: ""Create Purchase Requisition Item""})-[:DF]->(e2:Event) WHERE e2.Activity IN [""Create Purchase Order Item"", ""Vendor creates invoice""] RETURN COUNT(e1) = 0 AS ruleSatisfied"
"After ""Record Goods Receipt,"" ""Record Invoice Receipt"" or ""Clear Invoice"" must not occur immediately.","Activity: [""Record Goods Receipt"", ""Record Invoice Receipt"", ""Clear Invoice""], EntityType: [], Actor: []","MATCH (e1:Event {Activity: ""Record Goods Receipt""})-[:DF]->(e2:Event) WHERE e2.Activity IN [""Record Invoice Receipt"", ""Clear Invoice""] RETURN COUNT(e1) = 0 AS ruleSatisfied"
"A ""Vendor creates invoice"" event must not immediately precede ""Clear Invoice"" or ""Delete Purchase Order Item.""","Activity: [""Vendor creates invoice"", ""Clear Invoice"", ""Delete Purchase Order Item""], EntityType: [], Actor: []","MATCH (e1:Event {Activity: ""Vendor creates invoice""})-[:DF]->(e2:Event) WHERE e2.Activity IN [""Clear Invoice"", ""Delete Purchase Order Item""] RETURN COUNT(e1) = 0 AS ruleSatisfied"
"On average, an entity of type ""PO"" has exactly 3 events of type ""Create Purchase Order Item"".","Activity: [""Create Purchase Order Item""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e:Event {Activity: ""Create Purchase Order Item""}) WITH ent, COUNT(e) AS orderItemCount RETURN AVG(orderItemCount) = 3 AS ruleSatisfied"
"On average, a ""POI"" (Purchase Order Item) has more than 2 events related to ""Vendor creates invoice"".","Activity: [""Vendor creates invoice""], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event {Activity: ""Vendor creates invoice""}) WITH ent, COUNT(e) AS invoiceCount RETURN AVG(invoiceCount) > 2 AS ruleSatisfied"
"On average, each ""Purchase Order"" entity should have at least 1 event for ""Record Goods Receipt"".","Activity: [""Record Goods Receipt""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e:Event {Activity: ""Record Goods Receipt""}) WITH ent, COUNT(e) AS receiptCount RETURN AVG(receiptCount) >= 1 AS ruleSatisfied"
"On average, a ""PO"" (Purchase Order) entity has at least 2 events related to ""Change Quantity"".","Activity: [""Change Quantity""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e:Event {Activity: ""Change Quantity""}) WITH ent, COUNT(e) AS changeCount RETURN AVG(changeCount) >= 2 AS ruleSatisfied"
"On average, an ""Item"" entity typically has fewer than 6 events for ""Record Service Entry Sheet"".","Activity: [""Record Service Entry Sheet""], EntityType: [""Item""], Actor: []","MATCH (ent:Entity {EntityType: ""Item""})<-[:CORR]-(e:Event {Activity: ""Record Service Entry Sheet""}) WITH ent, COUNT(e) AS serviceCount RETURN AVG(serviceCount) < 6 AS ruleSatisfied"
"On average, each purchase order item is associated with exactly 4 instances where the invoice is recorded.","Activity: [""Record Invoice Receipt""], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event {Activity: ""Record Invoice Receipt""}) WITH ent, COUNT(e) AS receiptCount RETURN AVG(receiptCount) = 4 AS ruleSatisfied"
"On average, a purchase order has at least 2 occurrences where the quantity of an item is changed.","Activity: [""Change Quantity""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e:Event {Activity: ""Change Quantity""}) WITH ent, COUNT(e) AS changeCount RETURN AVG(changeCount) >= 2 AS ruleSatisfied"
"On average, a purchase order item is involved in no more than 3 instances of removing a payment block.","Activity: [""Remove Payment Block""], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event {Activity: ""Remove Payment Block""}) WITH ent, COUNT(e) AS blockCount RETURN AVG(blockCount) <= 3 AS ruleSatisfied"
"On average, each purchase order item has fewer than 5 occurrences where goods receipt is recorded.","Activity: [""Record Goods Receipt""], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event {Activity: ""Record Goods Receipt""}) WITH ent, COUNT(e) AS receiptCount RETURN AVG(receiptCount) < 5 AS ruleSatisfied"
"On average, every purchase order should have at least one action where the order confirmation is received.","Activity: [""Receive Order Confirmation""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e:Event {Activity: ""Receive Order Confirmation""}) WITH ent, COUNT(e) AS confirmationCount RETURN AVG(confirmationCount) >= 1 AS ruleSatisfied"
"On average, a purchase order item is linked to exactly 2 events where a purchase order item is created.","Activity: [""Create Purchase Order Item""], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event {Activity: ""Create Purchase Order Item""}) WITH ent, COUNT(e) AS itemCount RETURN AVG(itemCount) = 2 AS ruleSatisfied"
"On average, every ""Create Purchase Order Item"" activity is directly followed by less than 3 different events.","Activity: [""Create Purchase Order Item""], EntityType: [], Actor: []","MATCH (e1:Event {Activity: ""Create Purchase Order Item""})-[:DF]->(e2:Event) WITH e1, COUNT(DISTINCT e2) AS followingCount RETURN AVG(followingCount) < 3 AS ruleSatisfied"
"On average, each ""Create Purchase Requisition Item"" is directly followed by exactly distinct 2 events.","Activity: [""Create Purchase Requisition Item""], EntityType: [], Actor: []","MATCH (e1:Event {Activity: ""Create Purchase Requisition Item""})-[:DF]->(e2:Event) WITH e1, COUNT(DISTINCT e2) AS followingCount RETURN AVG(followingCount) = 2 AS ruleSatisfied"
"On average, each event of type ""Create Purchase Order Item"" is directly followed by fewer than 4 different events.","Activity: [""Create Purchase Order Item""], EntityType: [], Actor: []","MATCH (e1:Event {Activity: ""Create Purchase Order Item""})-[:DF]->(e2:Event) WITH e1, COUNT(DISTINCT e2) AS followingCount RETURN AVG(followingCount) < 4 AS ruleSatisfied"
"On average, every ""Vendor creates invoice"" activity is directly preceded by fewer than 2 different events.","Activity: [""Vendor creates invoice""], EntityType: [], Actor: []","MATCH (e2:Event {Activity: ""Vendor creates invoice""})<-[:DF]-(e1:Event) WITH e2, COUNT(DISTINCT e1) AS precedingCount RETURN AVG(precedingCount) < 2 AS ruleSatisfied"
"On average, every ""Delete Purchase Order Item"" activity is immediately followed by fewer than 5 diffferent events.","Activity: [""Delete Purchase Order Item""], EntityType: [], Actor: []","MATCH (e1:Event {Activity: ""Delete Purchase Order Item""})-[:DF]->(e2:Event) WITH e1, COUNT(DISTINCT e2) AS followingCount RETURN AVG(followingCount) < 5 AS ruleSatisfied"
"On average, each event of type ""Clear Invoice"" is immediately preceded by more than 1 distinct event.","Activity: [""Clear Invoice""], EntityType: [], Actor: []","MATCH (e2:Event {Activity: ""Clear Invoice""})<-[:DF]-(e1:Event) WITH e2, COUNT(DISTINCT e1) AS precedingCount RETURN AVG(precedingCount) > 1 AS ruleSatisfied"
"On average, every creation of a purchase order item is directly followed by fewer than distinct 4 events.","Activity: [""Create Purchase Order Item""], EntityType: [], Actor: []","MATCH (e1:Event {Activity: ""Create Purchase Order Item""})-[:DF]->(e2:Event) WITH e1, COUNT(DISTINCT e2) AS followingCount RETURN AVG(followingCount) < 4 AS ruleSatisfied"
"On average, the recording of an invoice receipt is directly preceded by more than distinct 2 events.","Activity: [""Record Invoice Receipt""], EntityType: [], Actor: []","MATCH (e2:Event {Activity: ""Record Invoice Receipt""})<-[:DF]-(e1:Event) WITH e2, COUNT(DISTINCT e1) AS precedingCount RETURN AVG(precedingCount) > 2 AS ruleSatisfied"
"On average, the creation of a purchase requisition item is directly preceded by exactly 1 distinct event.","Activity: [""Create Purchase Requisition Item""], EntityType: [], Actor: []","MATCH (e2:Event {Activity: ""Create Purchase Requisition Item""})<-[:DF]-(e1:Event) WITH e2, COUNT(DISTINCT e1) AS precedingCount RETURN AVG(precedingCount) = 1 AS ruleSatisfied"
The average time between deleting a purchase order item and creating a purchase order item must not exceed 5 days.,"Activity: [""Delete Purchase Order Item"", ""Create Purchase Order Item""], EntityType: [], Actor: []","MATCH (e1:Event)-[:CORR]->(entity:Entity)<-[:CORR]-(e2:Event) WHERE e1.Activity = ""Delete Purchase Order Item"" AND e2.Activity = ""Create Purchase Order Item""  WITH e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN AVG(serviceTime.seconds) < (5 * 24 * 60 * 60) AS ruleSatisfied"
The average time between creating a purchase order item and receiving an order confirmation should not exceed 2 days.,"Activity: [""Create Purchase Order Item"", ""Receive Order Confirmation""], EntityType: [], Actor: []","MATCH (e1:Event)-[:CORR]->(entity:Entity)<-[:CORR]-(e2:Event) WHERE e1.Activity = ""Create Purchase Order Item"" AND e2.Activity = ""Receive Order Confirmation""  WITH e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN AVG(serviceTime.seconds) < (2 * 24 * 60 * 60) AS ruleSatisfied"
There should be more than 7 days on average between when the vendor creates invoice and when the record invoice receipt happens.,"Activity: [""Vendor creates invoice"", ""Record Invoice Receipt""], EntityType: [], Actor: []","MATCH (e1:Event)-[:CORR]->(entity:Entity)<-[:CORR]-(e2:Event) WHERE e1.Activity = ""Vendor creates invoice"" AND e2.Activity = ""Record Invoice Receipt""  WITH e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN AVG(serviceTime.seconds) > (7 * 24 * 60 * 60) AS ruleSatisfied"
"It should take more than 4 days, on average, between record goods receipt and clear invoice.","Activity: [""Record Goods Receipt"", ""Clear Invoice""], EntityType: [], Actor: []","MATCH (e1:Event)-[:CORR]->(entity:Entity)<-[:CORR]-(e2:Event) WHERE e1.Activity = ""Record Goods Receipt"" AND e2.Activity = ""Clear Invoice""  WITH e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN AVG(serviceTime.seconds) > (4 * 24 * 60 * 60) AS ruleSatisfied"
"On average, the time between delete purchase order item and record service entry sheet should exceed 3 days.","Activity: [""Delete Purchase Order Item"", ""Record Service Entry Sheet""], EntityType: [], Actor: []","MATCH (e1:Event)-[:CORR]->(entity:Entity)<-[:CORR]-(e2:Event) WHERE e1.Activity = ""Delete Purchase Order Item"" AND e2.Activity = ""Record Service Entry Sheet""  WITH e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN AVG(serviceTime.seconds) > (3 * 24 * 60 * 60) AS ruleSatisfied"
"The time taken between create purchase order item and receive order confirmation must, on average, be greater than 2 days.","Activity: [""Create Purchase Order Item"", ""Receive Order Confirmation""], EntityType: [], Actor: []","MATCH (e1:Event)-[:CORR]->(entity:Entity)<-[:CORR]-(e2:Event) WHERE e1.Activity = ""Create Purchase Order Item"" AND e2.Activity = ""Receive Order Confirmation""  WITH e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN AVG(serviceTime.seconds) > (2 * 24 * 60 * 60) AS ruleSatisfied"
"When record invoice receipt occurs, the average time between this and any invoice creation should exceed 5 days.","Activity: [""Record Invoice Receipt"", ""Vendor creates invoice""], EntityType: [], Actor: []","MATCH (e1:Event)-[:CORR]->(entity:Entity)<-[:CORR]-(e2:Event) WHERE e1.Activity = ""Record Invoice Receipt"" AND e2.Activity = ""Vendor creates invoice""  WITH e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN AVG(serviceTime.seconds) > (5 * 24 * 60 * 60) AS ruleSatisfied"
The gap between delete purchase order item and create purchase order item should average more than 6 days.,"Activity: [""Delete Purchase Order Item"", ""Create Purchase Order Item""], EntityType: [], Actor: []","MATCH (e1:Event)-[:CORR]->(entity:Entity)<-[:CORR]-(e2:Event) WHERE e1.Activity = ""Delete Purchase Order Item"" AND e2.Activity = ""Create Purchase Order Item""  WITH e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN AVG(serviceTime.seconds) > (6 * 24 * 60 * 60) AS ruleSatisfied"
"On average, receive order confirmation and goods receipt should be more than 4 days away from each other.","Activity: [""Receive Order Confirmation"", ""Record Goods Receipt""], EntityType: [], Actor: []","MATCH (e1:Event)-[:CORR]->(entity:Entity)<-[:CORR]-(e2:Event) WHERE e1.Activity = ""Receive Order Confirmation"" AND e2.Activity = ""Record Goods Receipt""  WITH e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN AVG(serviceTime.seconds) > (4 * 24 * 60 * 60) AS ruleSatisfied"
The average time taken between delete purchase order item and clear invoice should be greater than 1 day.,"Activity: [""Delete Purchase Order Item"", ""Clear Invoice""], EntityType: [], Actor: []","MATCH (e1:Event)-[:CORR]->(entity:Entity)<-[:CORR]-(e2:Event) WHERE e1.Activity = ""Delete Purchase Order Item"" AND e2.Activity = ""Clear Invoice""  WITH e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN AVG(serviceTime.seconds) > (1 * 24 * 60 * 60) AS ruleSatisfied"
A Purchase Order Item cannot be deleted before an invoice is recorded.,"Activity: [""Delete Purchase Order Item"", ""Record Invoice Receipt""], EntityType: [""POI""], Actor: []",MATCH (e2:Event {Activity: 'Record Invoice Receipt'})-[:CORR]->(ent:Entity {EntityType: 'POI'}) MATCH (e1:Event {Activity: 'Delete Purchase Order Item'})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp RETURN CASE WHEN COUNT(e2) > 0 THEN false ELSE true END AS ruleSatisfied
A Purchase Order must have an order confirmation before a goods receipt is recorded.,"Activity: [""Receive Order Confirmation"", ""Record Goods Receipt""], EntityType: [""PO""], Actor: []",MATCH (e2:Event {Activity: 'Record Goods Receipt'})-[:CORR]->(ent:Entity {EntityType: 'PO'}) MATCH (e1:Event {Activity: 'Receive Order Confirmation'})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp RETURN CASE WHEN COUNT(e2) > 0 THEN false ELSE true END AS ruleSatisfied
A Purchase Order Item should not have a service entry sheet recorded before a purchase order item is created.,"Activity: [""Record Service Entry Sheet"", ""Create Purchase Requisition Item""], EntityType: [""POI""], Actor: []",MATCH (e2:Event {Activity: 'Create Purchase Requisition Item'})-[:CORR]->(ent:Entity {EntityType: 'POI'}) MATCH (e1:Event {Activity: 'Record Service Entry Sheet'})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp RETURN CASE WHEN COUNT(e2) > 0 THEN false ELSE true END AS ruleSatisfied
A Purchase Order must not have a vendor invoice created before a purchase order item is created.,"Activity: [""Vendor creates invoice"", ""Create Purchase Order Item""], EntityType: [""PO""], Actor: []",MATCH (e2:Event {Activity: 'Create Purchase Order Item'})-[:CORR]->(ent:Entity {EntityType: 'PO'}) MATCH (e1:Event {Activity: 'Vendor creates invoice'})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp RETURN CASE WHEN COUNT(e2) > 0 THEN false ELSE true END AS ruleSatisfied
A Purchase Order Item must have a goods receipt recorded before an invoice is recorded.,"Activity: [""Record Goods Receipt"", ""Record Invoice Receipt""], EntityType: [""POI""], Actor: []",MATCH (e2:Event {Activity: 'Record Invoice Receipt'})-[:CORR]->(ent:Entity {EntityType: 'POI'}) MATCH (e1:Event {Activity: 'Record Goods Receipt'})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp RETURN CASE WHEN COUNT(e2) > 0 THEN false ELSE true END AS ruleSatisfied
A Purchase Order cannot have a payment block removed before an invoice is cleared.,"Activity: [""Remove Payment Block"", ""Clear Invoice""], EntityType: [""PO""], Actor: []",MATCH (e2:Event {Activity: 'Clear Invoice'})-[:CORR]->(ent:Entity {EntityType: 'PO'}) MATCH (e1:Event {Activity: 'Remove Payment Block'})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp RETURN CASE WHEN COUNT(e2) > 0 THEN false ELSE true END AS ruleSatisfied
"After a vendor creates an invoice for a purchase order (PO), the system must record a goods receipt or an invoice receipt.","Activity: [""Vendor creates invoice"", ""Record Goods Receipt"", ""Record Invoice Receipt""], EntityType: [""PO""], Actor: []","MATCH (e1:Event {Activity: ""Vendor creates invoice""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (e2:Event {Activity: ""Record Goods Receipt""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp OPTIONAL MATCH (e3:Event {Activity: ""Record Invoice Receipt""})-[:CORR]->(ent) WHERE e1.timestamp < e3.timestamp WITH e1, count(e2) + count(e3) AS succeedingCount RETURN CASE WHEN any(e IN collect(succeedingCount) WHERE e = 0) THEN false ELSE true END AS ruleSatisfied"
"If an order confirmation is received for a purchase order item (POI), the quantity must be changed or the purchase order item must be deleted.","Activity: [""Receive Order Confirmation"", ""Change Quantity"", ""Delete Purchase Order Item""], EntityType: [""POI""], Actor: []","MATCH (e1:Event {Activity: ""Receive Order Confirmation""})-[:CORR]->(ent:Entity {EntityType: ""POI""}) OPTIONAL MATCH (e2:Event {Activity: ""Change Quantity""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp OPTIONAL MATCH (e3:Event {Activity: ""Delete Purchase Order Item""})-[:CORR]->(ent) WHERE e1.timestamp < e3.timestamp WITH e1, count(e2) + count(e3) AS succeedingCount RETURN CASE WHEN any(e IN collect(succeedingCount) WHERE e = 0) THEN false ELSE true END AS ruleSatisfied"
"Whenever a purchase order (PO) is created, it must lead to either a vendor invoice or a recorded service entry sheet.","Activity: [""Create Purchase Order Item"", ""Vendor creates invoice"", ""Record Service Entry Sheet""], EntityType: [""PO""], Actor: []","MATCH (e1:Event {Activity: ""Create Purchase Order Item""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (e2:Event {Activity: ""Vendor creates invoice""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp OPTIONAL MATCH (e3:Event {Activity: ""Record Service Entry Sheet""})-[:CORR]->(ent) WHERE e1.timestamp < e3.timestamp WITH e1, count(e2) + count(e3) AS succeedingCount RETURN CASE WHEN any(e IN collect(succeedingCount) WHERE e = 0) THEN false ELSE true END AS ruleSatisfied"
A recorded invoice receipt for a purchase order item (POI) should be followed by either invoice clearing or payment block removal.,"Activity: [""Record Invoice Receipt"", ""Clear Invoice"", ""Remove Payment Block""], EntityType: [""POI""], Actor: []","MATCH (e1:Event {Activity: ""Record Invoice Receipt""})-[:CORR]->(ent:Entity {EntityType: ""POI""}) OPTIONAL MATCH (e2:Event {Activity: ""Clear Invoice""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp OPTIONAL MATCH (e3:Event {Activity: ""Remove Payment Block""})-[:CORR]->(ent) WHERE e1.timestamp < e3.timestamp WITH e1, count(e2) + count(e3) AS succeedingCount RETURN CASE WHEN any(e IN collect(succeedingCount) WHERE e = 0) THEN false ELSE true END AS ruleSatisfied"
"For a Purchase Order, once a payment block is removed, a service entry sheet or invoice receipt must follow.","Activity: [""Remove Payment Block"", ""Record Service Entry Sheet"", ""Record Invoice Receipt""], EntityType: [""PO""]","MATCH (e1:Event {Activity: ""Remove Payment Block""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (e2:Event {Activity: ""Record Service Entry Sheet""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp OPTIONAL MATCH (e3:Event {Activity: ""Record Invoice Receipt""})-[:CORR]->(ent) WHERE e1.timestamp < e3.timestamp WITH e1, count(e2) + count(e3) AS succeedingCount RETURN CASE WHEN any(e IN collect(succeedingCount) WHERE e = 0) THEN false ELSE true END AS ruleSatisfied"
"After a vendor creates an invoice for a purchase order, the system must record a goods receipt or an invoice receipt.","Activity: [""Vendor creates invoice"", ""Record Goods Receipt"", ""Record Invoice Receipt""], EntityType: [""PO""], Actor: []","MATCH (e1:Event {Activity: ""Vendor creates invoice""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (e2:Event {Activity: ""Record Goods Receipt""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp OPTIONAL MATCH (e3:Event {Activity: ""Record Invoice Receipt""})-[:CORR]->(ent) WHERE e1.timestamp < e3.timestamp WITH e1, count(e2) + count(e3) AS succeedingCount RETURN CASE WHEN any(e IN collect(succeedingCount) WHERE e = 0) THEN false ELSE true END AS ruleSatisfied"
"If an order confirmation is received for a purchase order item, the quantity must be changed or the purchase order item must be deleted at some point after.","Activity: [""Receive Order Confirmation"", ""Change Quantity"", ""Delete Purchase Order Item""], EntityType: [""POI""], Actor: []","MATCH (e1:Event {Activity: ""Receive Order Confirmation""})-[:CORR]->(ent:Entity {EntityType: ""POI""}) OPTIONAL MATCH (e2:Event {Activity: ""Change Quantity""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp OPTIONAL MATCH (e3:Event {Activity: ""Delete Purchase Order Item""})-[:CORR]->(ent) WHERE e1.timestamp < e3.timestamp WITH e1, count(e2) + count(e3) AS succeedingCount RETURN CASE WHEN any(e IN collect(succeedingCount) WHERE e = 0) THEN false ELSE true END AS ruleSatisfied"
"Whenever a purchase order is created, it must lead to either a vendor invoice or a recorded service entry sheet.","Activity: [""Create Purchase Order Item"", ""Vendor creates invoice"", ""Record Service Entry Sheet""], EntityType: [""PO""], Actor: []","MATCH (e1:Event {Activity: ""Create Purchase Order Item""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (e2:Event {Activity: ""Vendor creates invoice""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp OPTIONAL MATCH (e3:Event {Activity: ""Record Service Entry Sheet""})-[:CORR]->(ent) WHERE e1.timestamp < e3.timestamp WITH e1, count(e2) + count(e3) AS succeedingCount RETURN CASE WHEN any(e IN collect(succeedingCount) WHERE e = 0) THEN false ELSE true END AS ruleSatisfied"
A recorded invoice receipt for a purchase order item should be followed by either invoice clearing or payment block removal.,"Activity: [""Record Invoice Receipt"", ""Clear Invoice"", ""Remove Payment Block""], EntityType: [""POI""], Actor: []","MATCH (e1:Event {Activity: ""Record Invoice Receipt""})-[:CORR]->(ent:Entity {EntityType: ""POI""}) OPTIONAL MATCH (e2:Event {Activity: ""Clear Invoice""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp OPTIONAL MATCH (e3:Event {Activity: ""Remove Payment Block""})-[:CORR]->(ent) WHERE e1.timestamp < e3.timestamp WITH e1, count(e2) + count(e3) AS succeedingCount RETURN CASE WHEN any(e IN collect(succeedingCount) WHERE e = 0) THEN false ELSE true END AS ruleSatisfied"
"After receiving an order confirmation for a PO, a goods receipt or invoice receipt must follow.","Activity: [""Receive Order Confirmation"", ""Record Goods Receipt"", ""Record Invoice Receipt""], EntityType: [""PO""], Actor: []","MATCH (e1:Event {Activity: ""Receive Order Confirmation""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (e2:Event {Activity: ""Record Goods Receipt""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp OPTIONAL MATCH (e3:Event {Activity: ""Record Invoice Receipt""})-[:CORR]->(ent) WHERE e1.timestamp < e3.timestamp WITH e1, count(e2) + count(e3) AS succeedingCount RETURN CASE WHEN any(e IN collect(succeedingCount) WHERE e = 0) THEN false ELSE true END AS ruleSatisfied"
"For a Purchase Order, once a payment block is removed, a service entry sheet or invoice receipt must follow.","Activity: [""Remove Payment Block"", ""Record Service Entry Sheet"", ""Record Invoice Receipt""], EntityType: [""PO""], Actor: []","MATCH (e1:Event {Activity: ""Remove Payment Block""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (e2:Event {Activity: ""Record Service Entry Sheet""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp OPTIONAL MATCH (e3:Event {Activity: ""Record Invoice Receipt""})-[:CORR]->(ent) WHERE e1.timestamp < e3.timestamp WITH e1, count(e2) + count(e3) AS succeedingCount RETURN CASE WHEN any(e IN collect(succeedingCount) WHERE e = 0) THEN false ELSE true END AS ruleSatisfied"
A Purchase Order should only have 3 or fewer associated Purchase Order Items on average.,"Activity: [] EntityType: [""PO"", ""POI""] Actor: []","MATCH (ent1:Entity {EntityType:""PO""})-[:REL]-(ent2:Entity {EntityType:""POI""}) WITH ent1, COUNT(DISTINCT ent2) AS relatedItemCount RETURN AVG(relatedItemCount) <= 3 AS ruleSatisfied"
A Purchase Order must have no more than 3 associated Purchase Order Items on average.,"Activity: [] EntityType: [""PO"", ""POI""] Actor: []","MATCH (ent1:Entity {EntityType:""PO""})-[:REL]-(ent2:Entity {EntityType:""POI""}) WITH ent1, COUNT(DISTINCT ent2) AS relatedItemCount RETURN AVG(relatedItemCount) <= 3 AS ruleSatisfied"
A PO should not have an average of more than 3 POI.,"Activity: [] EntityType: [""PO"", ""POI""] Actor: []","MATCH (ent1:Entity {EntityType:""PO""})-[:REL]-(ent2:Entity {EntityType:""POI""}) WITH ent1, COUNT(DISTINCT ent2) AS relatedItemCount RETURN AVG(relatedItemCount) <= 3 AS ruleSatisfied"
A Purchase Order may not contain an average of more than 3 related Purchase Order Items.,"Activity: [] EntityType: [""PO"", ""POI""] Actor: []","MATCH (ent1:Entity {EntityType:""PO""})-[:REL]-(ent2:Entity {EntityType:""POI""}) WITH ent1, COUNT(DISTINCT ent2) AS relatedItemCount RETURN AVG(relatedItemCount) <= 3 AS ruleSatisfied"
A PO must have an average of no more than 3 POI.,"Activity: [] EntityType: [""PO"", ""POI""] Actor: []","MATCH (ent1:Entity {EntityType:""PO""})-[:REL]-(ent2:Entity {EntityType:""POI""}) WITH ent1, COUNT(DISTINCT ent2) AS relatedItemCount RETURN AVG(relatedItemCount) <= 3 AS ruleSatisfied"
A Purchase Order Item (POI) may not have more than 3 Purchase Orders (PO) associated on average.,"Activity: [] EntityType: [""POI"", ""PO""] Actor: []","MATCH (ent2:Entity {EntityType:""PO""})-[:REL]-(ent1:Entity {EntityType:""POI""}) WITH ent1, COUNT(DISTINCT ent2) AS relatedPOCount RETURN AVG(relatedPOCount) <= 3 AS ruleSatisfied"
A POI should not be connected to more than 3 POs on average.,"Activity: [] EntityType: [""POI"", ""PO""] Actor: []","MATCH (ent2:Entity {EntityType:""PO""})-[:REL]-(ent1:Entity {EntityType:""POI""}) WITH ent1, COUNT(DISTINCT ent2) AS relatedPOCount RETURN AVG(relatedPOCount) <= 3 AS ruleSatisfied"
A Purchase Order Item (POI) cannot exceed an average of 3 related Purchase Orders (PO).,"Activity: [] EntityType: [""POI"", ""PO""] Actor: []","MATCH (ent2:Entity {EntityType:""PO""})-[:REL]-(ent1:Entity {EntityType:""POI""}) WITH ent1, COUNT(DISTINCT ent2) AS relatedPOCount RETURN AVG(relatedPOCount) <= 3 AS ruleSatisfied"
A Purchase Order Item may not have more than 3 associated Purchase Orders on average.,"Activity: [] EntityType: [""POI"", ""PO""] Actor: []","MATCH (ent2:Entity {EntityType:""PO""})-[:REL]-(ent1:Entity {EntityType:""POI""}) WITH ent1, COUNT(DISTINCT ent2) AS relatedPOCount RETURN AVG(relatedPOCount) <= 3 AS ruleSatisfied"
A POI entity should not be connected to more than 3 PO entities on average.,"Activity: [] EntityType: [""POI"", ""PO""] Actor: []","MATCH (ent2:Entity {EntityType:""PO""})-[:REL]-(ent1:Entity {EntityType:""POI""}) WITH ent1, COUNT(DISTINCT ent2) AS relatedPOCount RETURN AVG(relatedPOCount) <= 3 AS ruleSatisfied"
A purchase order item created by user_429 should not be followed by an invoice receipt from user_407 within 7 days.,"Activity: [""Create Purchase Order Item"", ""Record Invoice Receipt""], Actor: [""user_429"", ""user_407""]","MATCH (e1:Event {Activity: 'Create Purchase Order Item', Actor: 'user_429'})-[:CORR]->(entity:Entity) MATCH (e2:Event {Activity: 'Record Invoice Receipt', Actor: 'user_407'})-[:CORR]->(entity) WHERE e2.timestamp >= e1.timestamp AND e2.timestamp <= e1.timestamp + duration({days: 7}) RETURN CASE WHEN count(e1) > 0 THEN false ELSE true END AS result"
No invoice receipt by user_002 may happen within 7 days after user_258 creates a goods receipt.,"Activity: [""Record Invoice Receipt"", ""Record Goods Receipt""], Actor: [""user_002"", ""user_258""]","MATCH (e1:Event {Activity: 'Record Goods Receipt', Actor: 'user_258'})-[:CORR]->(entity:Entity) MATCH (e2:Event {Activity: 'Record Invoice Receipt', Actor: 'user_002'})-[:CORR]->(entity) WHERE e2.timestamp >= e1.timestamp AND e2.timestamp <= e1.timestamp + duration({days: 7}) RETURN CASE WHEN count(e1) > 0 THEN false ELSE true END AS result"
"After user_059 removes a payment block, no goods receipt by batch_10 should occur within the next 7 days.","Activity: [""Remove Payment Block"", ""Record Goods Receipt""], Actor: [""user_059"", ""batch_10""]","MATCH (e1:Event {Activity: 'Remove Payment Block', Actor: 'user_059'})-[:CORR]->(entity:Entity) MATCH (e2:Event {Activity: 'Record Goods Receipt', Actor: 'batch_10'})-[:CORR]->(entity) WHERE e2.timestamp >= e1.timestamp AND e2.timestamp <= e1.timestamp + duration({days: 7}) RETURN CASE WHEN count(e1) > 0 THEN false ELSE true END AS result"
"If user_005 has recorded a service entry sheet, no invoice receipt should happen by user_177 for the next week.","Activity: [""Record Service Entry Sheet"", ""Record Invoice Receipt""], Actor: [""user_005"", ""user_177""]","MATCH (e1:Event {Activity: 'Record Service Entry Sheet', Actor: 'user_005'})-[:CORR]->(entity:Entity) MATCH (e2:Event {Activity: 'Record Invoice Receipt', Actor: 'user_177'})-[:CORR]->(entity) WHERE e2.timestamp >= e1.timestamp AND e2.timestamp <= e1.timestamp + duration({days: 7}) RETURN CASE WHEN count(e1) > 0 THEN false ELSE true END AS result"
"When user_258 creates a purchase requisition item, no goods receipt should be recorded by user_059 in the subsequent week.","Activity: [""Create Purchase Requisition Item"", ""Record Goods Receipt""], Actor: [""user_258"", ""user_059""]","MATCH (e1:Event {Activity: 'Create Purchase Requisition Item', Actor: 'user_258'})-[:CORR]->(entity:Entity) MATCH (e2:Event {Activity: 'Record Goods Receipt', Actor: 'user_059'})-[:CORR]->(entity) WHERE e2.timestamp >= e1.timestamp AND e2.timestamp <= e1.timestamp + duration({days: 7}) RETURN CASE WHEN count(e1) > 0 THEN false ELSE true END AS result"
"After user_034 changes the quantity, user_059 must not submit an invoice receipt within the following 7 days.","Activity: [""Change Quantity"", ""Record Invoice Receipt""], Actor: [""user_034"", ""user_059""]","MATCH (e1:Event {Activity: 'Change Quantity', Actor: 'user_034'})-[:CORR]->(entity:Entity) MATCH (e2:Event {Activity: 'Record Invoice Receipt', Actor: 'user_059'})-[:CORR]->(entity) WHERE e2.timestamp >= e1.timestamp AND e2.timestamp <= e1.timestamp + duration({days: 7}) RETURN CASE WHEN count(e1) > 0 THEN false ELSE true END AS result"
"If batch_06 records an invoice receipt, user_434 cannot create a purchase requisition item within the next week.","Activity: [""Record Invoice Receipt"", ""Create Purchase Requisition Item""], Actor: [""batch_06"", ""user_434""]","MATCH (e1:Event {Activity: 'Record Invoice Receipt', Actor: 'batch_06'})-[:CORR]->(entity:Entity) MATCH (e2:Event {Activity: 'Create Purchase Requisition Item', Actor: 'user_434'})-[:CORR]->(entity) WHERE e2.timestamp >= e1.timestamp AND e2.timestamp <= e1.timestamp + duration({days: 7}) RETURN CASE WHEN count(e1) > 0 THEN false ELSE true END AS result"
A purchase order item cannot be created by user_034 within 7 days of user_136 receiving an order confirmation.,"Activity: [""Create Purchase Order Item"", ""Receive Order Confirmation""], Actor: [""user_034"", ""user_136""]","MATCH (e1:Event {Activity: 'Receive Order Confirmation', Actor: 'user_136'})-[:CORR]->(entity:Entity) MATCH (e2:Event {Activity: 'Create Purchase Order Item', Actor: 'user_034'})-[:CORR]->(entity) WHERE e2.timestamp >= e1.timestamp AND e2.timestamp <= e1.timestamp + duration({days: 7}) RETURN CASE WHEN count(e1) > 0 THEN false ELSE true END AS result"
User_259 must not create a purchase requisition item after user_447 records an invoice receipt in the next week.,"Activity: [""Create Purchase Requisition Item"", ""Record Invoice Receipt""], Actor: [""user_259"", ""user_447""]","MATCH (e1:Event {Activity: 'Record Invoice Receipt', Actor: 'user_447'})-[:CORR]->(entity:Entity) MATCH (e2:Event {Activity: 'Create Purchase Requisition Item', Actor: 'user_259'})-[:CORR]->(entity) WHERE e2.timestamp >= e1.timestamp AND e2.timestamp <= e1.timestamp + duration({days: 7}) RETURN CASE WHEN count(e1) > 0 THEN false ELSE true END AS result"
"If user_059 records a service entry sheet, user_006 should not create a purchase requisition item within the following week.","Activity: [""Record Service Entry Sheet"", ""Create Purchase Requisition Item""], Actor: [""user_059"", ""user_006""]","MATCH (e1:Event {Activity: 'Record Service Entry Sheet', Actor: 'user_059'})-[:CORR]->(entity:Entity) MATCH (e2:Event {Activity: 'Create Purchase Requisition Item', Actor: 'user_006'})-[:CORR]->(entity) WHERE e2.timestamp >= e1.timestamp AND e2.timestamp <= e1.timestamp + duration({days: 7}) RETURN CASE WHEN count(e1) > 0 THEN false ELSE true END AS result"
It is not allowed for one person to manage all tasks for a single entity.,"Activity: [], EntityType: [], Actor: []","MATCH (e:Entity)<-[:CORR]-(ev:Event) WITH e, COLLECT(DISTINCT ev.Actor) AS actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) = 1) THEN false ELSE true END AS ruleSatisfied"
It is forbidden for a single actor to manage all tasks associated with a specific entity.,"Activity: [], EntityType: [], Actor: []","MATCH (e:Entity)<-[:CORR]-(ev:Event) WITH e, COLLECT(DISTINCT ev.Actor) AS actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) = 1) THEN false ELSE true END AS ruleSatisfied"
An actor must not be assigned to all tasks of an entity.,"Activity: [], EntityType: [], Actor: []","MATCH (e:Entity)<-[:CORR]-(ev:Event) WITH e, COLLECT(DISTINCT ev.Actor) AS actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) = 1) THEN false ELSE true END AS ruleSatisfied"
A single actor should not take on all activities for a particular entity.,"Activity: [], EntityType: [], Actor: []","MATCH (e:Entity)<-[:CORR]-(ev:Event) WITH e, COLLECT(DISTINCT ev.Actor) AS actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) = 1) THEN false ELSE true END AS ruleSatisfied"
It is not acceptable for one individual to be assigned all tasks of an entity.,"Activity: [], EntityType: [], Actor: []","MATCH (e:Entity)<-[:CORR]-(ev:Event) WITH e, COLLECT(DISTINCT ev.Actor) AS actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) = 1) THEN false ELSE true END AS ruleSatisfied"
No actor is allowed to manage all activities of a single entity.,"Activity: [], EntityType: [], Actor: []","MATCH (e:Entity)<-[:CORR]-(ev:Event) WITH e, COLLECT(DISTINCT ev.Actor) AS actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) = 1) THEN false ELSE true END AS ruleSatisfied"
It is forbidden for a person to handle every task within an entity.,"Activity: [], EntityType: [], Actor: []","MATCH (e:Entity)<-[:CORR]-(ev:Event) WITH e, COLLECT(DISTINCT ev.Actor) AS actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) = 1) THEN false ELSE true END AS ruleSatisfied"
It is not allowed for one person to perform every activity for an entity.,"Activity: [], EntityType: [], Actor: []","MATCH (e:Entity)<-[:CORR]-(ev:Event) WITH e, COLLECT(DISTINCT ev.Actor) AS actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) = 1) THEN false ELSE true END AS ruleSatisfied"
No single actor is allowed to be responsible for every activity of a single entity.,"Activity: [], EntityType: [], Actor: []","MATCH (e:Entity)<-[:CORR]-(ev:Event) WITH e, COLLECT(DISTINCT ev.Actor) AS actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) = 1) THEN false ELSE true END AS ruleSatisfied"
An actor should not oversee all tasks for a particular entity in the event log.,"Activity: [], EntityType: [], Actor: []","MATCH (e:Entity)<-[:CORR]-(ev:Event) WITH e, COLLECT(DISTINCT ev.Actor) AS actors RETURN CASE WHEN ANY(actors IN COLLECT(actors) WHERE SIZE(actors) = 1) THEN false ELSE true END AS ruleSatisfied"
"There must be a time gap of at least 10 days between ""Vendor creates invoice"" and ""Record Goods Receipt"" for an entity of type PO.","Activity: [""Vendor creates invoice"", ""Record Goods Receipt""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e1:Event {Activity: 'Vendor creates invoice'}) MATCH (ent)<-[:CORR]-(e2:Event {Activity: 'Record Goods Receipt'}) WITH ent, e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN MIN(abs(serviceTime.seconds)) > (10 * 24 * 60 * 60) AS rule_satisfied"
"There should be no more than 7 days between ""Record Invoice Receipt"" and ""Clear Invoice"" for any entity of type PO.","Activity: [""Record Invoice Receipt"", ""Clear Invoice""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e1:Event {Activity: 'Record Invoice Receipt'}) MATCH (ent)<-[:CORR]-(e2:Event {Activity: 'Clear Invoice'}) WITH ent, e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN MAX(abs(serviceTime.seconds)) < (7 * 24 * 60 * 60) AS rule_satisfied"
"For POIs, the ""Create Purchase Requisition Item"" and ""Delete Purchase Order Item"" activities must be separated by no more than 5 days.","Activity: [""Create Purchase Requisition Item"", ""Delete Purchase Order Item""], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e1:Event {Activity: 'Create Purchase Requisition Item'}) MATCH (ent)<-[:CORR]-(e2:Event {Activity: 'Delete Purchase Order Item'}) WITH ent, e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN MAX(abs(serviceTime.seconds)) < (5 * 24 * 60 * 60) AS rule_satisfied"
"For every PO entity, a ""Remove Payment Block""  and  ""Change Quantity"" event should never occur with more than 2 days between each other.","Activity: [""Change Quantity"", ""Remove Payment Block""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e1:Event {Activity: 'Change Quantity'}) MATCH (ent)<-[:CORR]-(e2:Event {Activity: 'Remove Payment Block'}) WITH ent, e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN MAX(abs(serviceTime.seconds)) < (2 * 24 * 60 * 60) AS rule_satisfied"
"There must be a gap of at least 1 day between the ""Receive Order Confirmation"" and ""Create Purchase Order Item"" activities for entities of type POI.","Activity: [""Receive Order Confirmation"", ""Create Purchase Order Item""], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e1:Event {Activity: 'Receive Order Confirmation'}) MATCH (ent)<-[:CORR]-(e2:Event {Activity: 'Create Purchase Order Item'}) WITH ent, e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN MIN(abs(serviceTime.seconds)) > (1 * 24 * 60 * 60) AS rule_satisfied"
"There should be no more than 15 days between ""Vendor creates invoice"" and ""Record Service Entry Sheet"" for any entity of type PO.","Activity: [""Vendor creates invoice"", ""Record Service Entry Sheet""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e1:Event {Activity: 'Vendor creates invoice'}) MATCH (ent)<-[:CORR]-(e2:Event {Activity: 'Record Service Entry Sheet'}) WITH ent, e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN MAX(abs(serviceTime.seconds)) < (15 * 24 * 60 * 60) AS rule_satisfied"
The event of recording the invoice receipt should never be more than 7 days after the event of clearing the invoice for each purchase order entity or vice-versa.,"Activity: [""Record Invoice Receipt"", ""Clear Invoice""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e1:Event {Activity: 'Record Invoice Receipt'}) MATCH (ent)<-[:CORR]-(e2:Event {Activity: 'Clear Invoice'}) WITH ent, e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN MAX(abs(serviceTime.seconds)) < (7 * 24 * 60 * 60) AS rule_satisfied"
"For each purchase order item, the event where a purchase requisition item is created and the event where a purchase order item is deleted must happen within 5 days of each other.","Activity: [""Create Purchase Requisition Item"", ""Delete Purchase Order Item""], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e1:Event {Activity: 'Create Purchase Requisition Item'}) MATCH (ent)<-[:CORR]-(e2:Event {Activity: 'Delete Purchase Order Item'}) WITH ent, e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN MAX(abs(serviceTime.seconds)) < (5 * 24 * 60 * 60) AS rule_satisfied"
The event where a payment block is removed must never happen more than 2 days after the event of changing the quantity for any purchase order entity or vice-versa.,"Activity: [""Change Quantity"", ""Remove Payment Block""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e1:Event {Activity: 'Change Quantity'}) MATCH (ent)<-[:CORR]-(e2:Event {Activity: 'Remove Payment Block'}) WITH ent, e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN MAX(abs(serviceTime.seconds)) < (2 * 24 * 60 * 60) AS rule_satisfied"
There must be no more than 15 days between the creation of an invoice by the vendor and the recording of a service entry sheet for any purchase order entity.,"Activity: [""Vendor creates invoice"", ""Record Service Entry Sheet""], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e1:Event {Activity: 'Vendor creates invoice'}) MATCH (ent)<-[:CORR]-(e2:Event {Activity: 'Record Service Entry Sheet'}) WITH ent, e1, e2, duration.between(e1.timestamp, e2.timestamp) AS serviceTime RETURN MAX(serviceTime.seconds) < (15 * 24 * 60 * 60) AS rule_satisfied"
"Only ""user_429"" can manage both Purchase Orders (PO) and Purchase Order Items (POI).","Activity: [] ,EntityType: [""PO"", ""POI""], Actor: [""user_429""]","MATCH (e:Event)-[:CORR]->(ent:Entity) WHERE ent.EntityType IN [""PO"", ""POI""] AND e.Actor <> 'user_429' RETURN CASE WHEN COUNT(e) = 0 THEN true ELSE false END AS ruleSatisfied"
"""user_429"" is the only authorized user for handling Purchase Orders and Purchase Order Items.","Activity: [] ,EntityType: [""PO"", ""POI""], Actor: [""user_429""]","MATCH (e:Event)-[:CORR]->(ent:Entity) WHERE ent.EntityType IN [""PO"", ""POI""] AND e.Actor <> 'user_429' RETURN CASE WHEN COUNT(e) = 0 THEN true ELSE false END AS ruleSatisfied"
"No one else then  ""user_407"" and ""user_429"" isallowed to handle Purchase Orders and Purchase Order Items.","Activity: [] ,EntityType: [""PO"", ""POI""], Actor: [""user_407"", ""user_429""]","MATCH (e:Event)-[:CORR]->(ent:Entity) WHERE ent.EntityType IN [""PO"", ""POI""] AND NOT e.Actor IN [""user_407"", ""user_429""] RETURN CASE WHEN COUNT(e) = 0 THEN true ELSE false END AS ruleSatisfied"
"No other than ""user_258"" manage Purchase Orders and Purchase Order Items.","Activity: [] ,EntityType: [""PO"", ""POI""], Actor: [""user_258""]","MATCH (e:Event)-[:CORR]->(ent:Entity) WHERE ent.EntityType IN [""PO"", ""POI""] AND e.Actor <> 'user_258' RETURN CASE WHEN COUNT(e) = 0 THEN true ELSE false END AS ruleSatisfied"
"Solely ""user_429"" is allowed to work on entities of type PO or POI.","Activity: [] ,EntityType: [""PO"", ""POI""], Actor: [""user_429""]","MATCH (e:Event)-[:CORR]->(ent:Entity) WHERE ent.EntityType IN [""PO"", ""POI""] AND e.Actor <> 'user_429' RETURN CASE WHEN COUNT(e) = 0 THEN true ELSE false END AS ruleSatisfied"
"Only ""user_424"" is allowed to handle Purchase Orders and Purchase Order Items.","Activity: [] ,EntityType: [""PO"", ""POI""], Actor: [""user_424""]","MATCH (e:Event)-[:CORR]->(ent:Entity) WHERE ent.EntityType IN [""PO"", ""POI""] AND e.Actor <> 'user_424' RETURN CASE WHEN COUNT(e) = 0 THEN true ELSE false END AS ruleSatisfied"
"""user_004"" is the only person permitted to handle entities of types PO or POI.","Activity: [] ,EntityType: [""PO"", ""POI""], Actor: [""user_004""]","MATCH (e:Event)-[:CORR]->(ent:Entity) WHERE ent.EntityType IN [""PO"", ""POI""] AND e.Actor <> 'user_004' RETURN CASE WHEN COUNT(e) = 0 THEN true ELSE false END AS ruleSatisfied"
"Only batch process ""batch_10"" can manage Purchase Orders and Purchase Order Items.","Activity: [] ,EntityType: [""PO"", ""POI""], Actor: [""batch_10""]","MATCH (e:Event)-[:CORR]->(ent:Entity) WHERE ent.EntityType IN [""PO"", ""POI""] AND e.Actor <> 'batch_10' RETURN CASE WHEN COUNT(e) = 0 THEN true ELSE false END AS ruleSatisfied"
"""user_034"" is the only actor who is involved Purchase Order and Purchase Order Item objects.","Activity: [] ,EntityType: [""PO"", ""POI""], Actor: [""user_034""]","MATCH (e:Event)-[:CORR]->(ent:Entity) WHERE ent.EntityType IN [""PO"", ""POI""] AND e.Actor <> 'user_034' RETURN CASE WHEN COUNT(e) = 0 THEN true ELSE false END AS ruleSatisfied"
"Only ""user_258"" and ""user_429"" are allowed to perform events correlated to Purchase Orders and Purchase Order Items.","Activity: [] ,EntityType: [""PO"", ""POI""], Actor: [""user_258"", ""user_429""]","MATCH (e:Event)-[:CORR]->(ent:Entity) WHERE ent.EntityType IN [""PO"", ""POI""] AND NOT e.Actor IN [""user_258"", ""user_429""] RETURN CASE WHEN COUNT(e) = 0 THEN true ELSE false END AS ruleSatisfied"
"If a purchase order item is deleted, then no invoice receipt should be recorded for the corresponding purchase order within 48 hours.","Activity: [""Delete Purchase Order Item"", ""Record Invoice Receipt""], EntityType: [""POI"", ""PO""], Actor: []","MATCH (poi:Entity {EntityType: ""POI""})<-[:CORR]-(deleteEvent:Event {Activity: ""Delete Purchase Order Item""}) MATCH (po:Entity {EntityType: ""PO""})<-[:CORR]-(invoiceEvent:Event {Activity: ""Record Invoice Receipt""}) WHERE invoiceEvent.timestamp <= deleteEvent.timestamp + duration({hours: 48}) AND EXISTS { MATCH (po)-[:REL]-(poi) } RETURN CASE WHEN COUNT(poi)>0 THEN false ELSE true END AS ruleSatisfied"
"When a goods receipt is recorded for a purchase order, an order confirmation must not be received for any of its purchase order items within 24 hours.","Activity: [""Record Goods Receipt"", ""Receive Order Confirmation""], EntityType: [""POI"", ""PO""], Actor: []","MATCH (po:Entity {EntityType: ""PO""})<-[:CORR]-(goodsReceipt:Event {Activity: ""Record Goods Receipt""}) MATCH (poi:Entity {EntityType: ""POI""})<-[:CORR]-(confirmation:Event {Activity: ""Receive Order Confirmation""}) WHERE confirmation.timestamp <= goodsReceipt.timestamp + duration({hours: 24}) AND EXISTS { MATCH (po)-[:REL]-(poi) } RETURN CASE WHEN COUNT(po)>0 THEN false ELSE true END AS ruleSatisfied"
"If a service entry sheet is recorded for a purchase order item, then no purchase requisition item should be created for the associated purchase order within 12 hours.","Activity: [""Record Service Entry Sheet"", ""Create Purchase Requisition Item""], EntityType: [""POI"", ""PO""], Actor: []","MATCH (poi:Entity {EntityType: ""POI""})<-[:CORR]-(serviceEntry:Event {Activity: ""Record Service Entry Sheet""}) MATCH (po:Entity {EntityType: ""PO""})<-[:CORR]-(purchaseRequisition:Event {Activity: ""Create Purchase Requisition Item""}) WHERE purchaseRequisition.timestamp <= serviceEntry.timestamp + duration({hours: 12}) AND EXISTS { MATCH (po)-[:REL]-(poi) } RETURN CASE WHEN COUNT(poi)>0 THEN false ELSE true END AS ruleSatisfied"
"If the quantity of a purchase order item is changed, then no invoice should be created for the associated purchase order within 6 hours.","Activity: [""Change Quantity"", ""Vendor creates invoice""], EntityType: [""POI"", ""PO""], Actor: []","MATCH (poi:Entity {EntityType: ""POI""})<-[:CORR]-(changeQuantity:Event {Activity: ""Change Quantity""}) MATCH (po:Entity {EntityType: ""PO""})<-[:CORR]-(invoice:Event {Activity: ""Vendor creates invoice""}) WHERE invoice.timestamp <= changeQuantity.timestamp + duration({hours: 6}) AND EXISTS { MATCH (po)-[:REL]-(poi) } RETURN CASE WHEN COUNT(poi)>0 THEN false ELSE true END AS ruleSatisfied"
"If an invoice receipt is recorded for a purchase order, then no corresponding purchase order item should be deleted within 15 hours.","Activity: [""Record Invoice Receipt"", ""Delete Purchase Order Item""], EntityType: [""POI"", ""PO""], Actor: []","MATCH (po:Entity {EntityType: ""PO""})<-[:CORR]-(invoiceReceipt:Event {Activity: ""Record Invoice Receipt""}) MATCH (poi:Entity {EntityType: ""POI""})<-[:CORR]-(deletePOI:Event {Activity: ""Delete Purchase Order Item""}) WHERE deletePOI.timestamp <= invoiceReceipt.timestamp + duration({hours: 15}) AND EXISTS { MATCH (po)-[:REL]-(poi) } RETURN CASE WHEN COUNT(po)>0 THEN false ELSE true END AS ruleSatisfied"
"When a ""Record Goods Receipt"" event occurs for a PO, no ""Receive Order Confirmation"" event should occur for any associated POI within 24 hours.","Activity: [""Record Goods Receipt"", ""Receive Order Confirmation""], EntityType: [""POI"", ""PO""], Actor: []","MATCH (po:Entity {EntityType: ""PO""})<-[:CORR]-(goodsReceipt:Event {Activity: ""Record Goods Receipt""}) MATCH (poi:Entity {EntityType: ""POI""})<-[:CORR]-(confirmation:Event {Activity: ""Receive Order Confirmation""}) WHERE confirmation.timestamp <= goodsReceipt.timestamp + duration({hours: 24}) AND EXISTS { MATCH (poi)-[:REL]-(po) } RETURN CASE WHEN COUNT(poi)>0 THEN false ELSE true END AS ruleSatisfied"
"If a ""Record Service Entry Sheet"" event happens for a POI, no ""Create Purchase Requisition Item"" event should happen for the associated PO within 12 hours.","Activity: [""Record Service Entry Sheet"", ""Create Purchase Requisition Item""], EntityType: [""POI"", ""PO""], Actor: []","MATCH (poi:Entity {EntityType: ""POI""})<-[:CORR]-(serviceEntry:Event {Activity: ""Record Service Entry Sheet""}) MATCH (po:Entity {EntityType: ""PO""})<-[:CORR]-(purchaseRequisition:Event {Activity: ""Create Purchase Requisition Item""}) WHERE purchaseRequisition.timestamp <= serviceEntry.timestamp + duration({hours: 12}) AND EXISTS { MATCH (po)-[:REL]-(poi) } RETURN CASE WHEN COUNT(poi)>0 THEN false ELSE true END AS ruleSatisfied"
"If a ""Clear Invoice"" event occurs for a PO, then no ""Delete Purchase Order Item"" event should occur for an associated POI within 36 hours.","Activity: [""Clear Invoice"", ""Delete Purchase Order Item""], EntityType: [""POI"", ""PO""], Actor: []","MATCH (po:Entity {EntityType: ""PO""})<-[:CORR]-(clearInvoice:Event {Activity: ""Clear Invoice""}) MATCH (poi:Entity {EntityType: ""POI""})<-[:CORR]-(deletePOI:Event {Activity: ""Delete Purchase Order Item""}) WHERE deletePOI.timestamp <= clearInvoice.timestamp + duration({hours: 36}) AND EXISTS { MATCH (po)-[:REL]-(poi) } RETURN CASE WHEN COUNT(po)>0 THEN false ELSE true END AS ruleSatisfied"
"If a ""Record Invoice Receipt"" event occurs for a PO, then no ""Remove Payment Block"" event should occur for any of its associated POI within 10 hours.","Activity: [""Record Invoice Receipt"", ""Remove Payment Block""], EntityType: [""POI"", ""PO""], Actor: []","MATCH (po:Entity {EntityType: ""PO""})<-[:CORR]-(invoiceReceipt:Event {Activity: ""Record Invoice Receipt""}) MATCH (poi:Entity {EntityType: ""POI""})<-[:CORR]-(removeBlock:Event {Activity: ""Remove Payment Block""}) WHERE removeBlock.timestamp <= invoiceReceipt.timestamp + duration({hours: 10}) AND EXISTS { MATCH (po)-[:REL]-(poi) } RETURN CASE WHEN COUNT(po)>0 THEN false ELSE true END AS ruleSatisfied"
"If a ""Record Goods Receipt"" event occurs for a PO, then no ""Vendor creates invoice"" event should happen for any of its associated POI within 24 hours.","Activity: [""Record Goods Receipt"", ""Vendor creates invoice""], EntityType: [""POI"", ""PO""], Actor: []","MATCH (po:Entity {EntityType: ""PO""})<-[:CORR]-(goodsReceipt:Event {Activity: ""Record Goods Receipt""}) MATCH (poi:Entity {EntityType: ""POI""})<-[:CORR]-(invoice:Event {Activity: ""Vendor creates invoice""}) WHERE invoice.timestamp <= goodsReceipt.timestamp + duration({hours: 24}) AND EXISTS { MATCH (po)-[:REL]-(poi) } RETURN CASE WHEN COUNT(po)>0 THEN false ELSE true END AS ruleSatisfied"
"For every purchase order, a ""Create Purchase Order Item"" event must happen at least 2 times before an ""Invoice Receipt"" can be recorded.","Activity: [""Create Purchase Order Item"", ""Record Invoice Receipt""], EntityType: [""PO""], Actor: []","MATCH (e1:Event {Activity: ""Create Purchase Order Item""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (e2:Event {Activity: ""Record Invoice Receipt""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp WITH ent, COUNT(e1) AS createPOICount WHERE createPOICount < 2 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
"Before an invoice can be cleared, at least 3 goods receipts must be recorded for the same purchase order.","Activity: [""Record Goods Receipt"", ""Clear Invoice""], EntityType: [""PO""], Actor: []","MATCH (e1:Event {Activity: ""Record Goods Receipt""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (e2:Event {Activity: ""Clear Invoice""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp WITH ent, COUNT(e1) AS goodsReceiptCount WHERE goodsReceiptCount < 3 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
At least four changes in quantity must be recorded before an order confirmation can be received for any purchase order item.,"Activity: [""Change Quantity"", ""Receive Order Confirmation""], EntityType: [""POI""], Actor: []","MATCH (e1:Event {Activity: ""Change Quantity""})-[:CORR]->(ent:Entity {EntityType: ""POI""}) OPTIONAL MATCH (e2:Event {Activity: ""Receive Order Confirmation""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp WITH ent, COUNT(e1) AS quantityChangeCount WHERE quantityChangeCount < 4 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
"For a given PO, a goods receipt must be recorded at least twice before an invoice can be created.","Activity: [""Record Goods Receipt"", ""Vendor creates invoice""], EntityType: [""PO""], Actor: []","MATCH (e1:Event {Activity: ""Record Goods Receipt""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (e2:Event {Activity: ""Vendor creates invoice""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp WITH ent, COUNT(e1) AS goodsReceiptCount WHERE goodsReceiptCount < 2 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
"Before an invoice can be cleared for a purchase order, at least five purchase order items must be created.","Activity: [""Create Purchase Order Item"", ""Clear Invoice""], EntityType: [""PO""], Actor: []","MATCH (e1:Event {Activity: ""Create Purchase Order Item""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (e2:Event {Activity: ""Clear Invoice""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp WITH ent, COUNT(e1) AS createPOICount WHERE createPOICount < 5 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
At least two purchase requisition items must be created before a purchase order item can be generated for the same PO.,"Activity: [""Create Purchase Requisition Item"", ""Create Purchase Order Item""], EntityType: [""PO""], Actor: []","MATCH (e1:Event {Activity: ""Create Purchase Requisition Item""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (e2:Event {Activity: ""Create Purchase Order Item""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp WITH ent, COUNT(e1) AS requisitionCount WHERE requisitionCount < 2 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
"For every PO, a ""Create Purchase Order Item"" event must happen at least 2 times before a ""Record Invoice Receipt"" event can occur.","Activity: [""Create Purchase Order Item"", ""Record Invoice Receipt""], EntityType: [""PO""], Actor: []","MATCH (e1:Event {Activity: ""Create Purchase Order Item""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (e2:Event {Activity: ""Record Invoice Receipt""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp WITH ent, COUNT(e1) AS createPOICount WHERE createPOICount < 2 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
"Before a ""Clear Invoice"" event can occur, at least 3 ""Record Goods Receipt"" events must be recorded for the same PO.","Activity: [""Record Goods Receipt"", ""Clear Invoice""], EntityType: [""PO""], Actor: []","MATCH (e1:Event {Activity: ""Record Goods Receipt""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) OPTIONAL MATCH (e2:Event {Activity: ""Clear Invoice""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp WITH ent, COUNT(e1) AS goodsReceiptCount WHERE goodsReceiptCount < 3 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
"If a ""Receive Order Confirmation"" event can occur for any POI, at least four ""Change Quantity"" events must occur before.","Activity: [""Change Quantity"", ""Receive Order Confirmation""], EntityType: [""POI""], Actor: []","MATCH (e1:Event {Activity: ""Change Quantity""})-[:CORR]->(ent:Entity {EntityType: ""POI""}) OPTIONAL MATCH (e2:Event {Activity: ""Receive Order Confirmation""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp WITH ent, COUNT(e1) AS quantityChangeCount WHERE quantityChangeCount < 4 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
"Before a ""Record Service Entry Sheet"" event can be recorded, at least two ""Create Purchase Order Item"" events must have been recorded for a POI.","Activity: [""Create Purchase Order Item"", ""Record Service Entry Sheet""], EntityType: [""POI""], Actor: []","MATCH (e1:Event {Activity: ""Create Purchase Order Item""})-[:CORR]->(ent:Entity {EntityType: ""POI""}) OPTIONAL MATCH (e2:Event {Activity: ""Record Service Entry Sheet""})-[:CORR]->(ent) WHERE e1.timestamp < e2.timestamp WITH ent, COUNT(e1) AS createPOICount WHERE createPOICount < 2 RETURN CASE WHEN COUNT(ent) > 0 THEN false ELSE true END AS ruleSatisfied"
User user_429 is prohibited from deleting a Purchase Order Item within 3 days prior to when a goods receipt is recorded for the same item.,"Activity: [""Delete Purchase Order Item"", ""Record Goods Receipt""], EntityType: [""POI""], Actor: [""user_429""]","MATCH (e1:Event {Activity: 'Delete Purchase Order Item', Actor: 'user_429'})-[:CORR]->(ent:Entity {EntityType: 'POI'}) MATCH (e2:Event {Activity: 'Record Goods Receipt'})-[:CORR]->(ent) WHERE e1.timestamp >= e2.timestamp - duration({days: 3}) RETURN CASE WHEN count(e2) > 0 THEN false ELSE true END AS result"
It is not allowed for user_258 to create a Purchase Order Item within 5 days before a service entry sheet is logged for that item.,"Activity: [""Create Purchase Order Item"", ""Record Service Entry Sheet""], EntityType: [""POI""], Actor: [""user_258""]","MATCH (e1:Event {Activity: 'Create Purchase Order Item', Actor: 'user_258'})-[:CORR]->(ent:Entity {EntityType: 'POI'}) MATCH (e2:Event {Activity: 'Record Service Entry Sheet'})-[:CORR]->(ent) WHERE e1.timestamp >= e2.timestamp - duration({days: 5}) RETURN CASE WHEN count(e2) > 0 THEN false ELSE true END AS result"
User batch_06 should not clear an invoice within 2 days before recording an invoice receipt for the same purchase order.,"Activity: [""Clear Invoice"", ""Record Invoice Receipt""], EntityType: [""PO""], Actor: [""batch_06""]","MATCH (e1:Event {Activity: 'Clear Invoice', Actor: 'batch_06'})-[:CORR]->(ent:Entity {EntityType: 'PO'}) MATCH (e2:Event {Activity: 'Record Invoice Receipt'})-[:CORR]->(ent) WHERE e1.timestamp >= e2.timestamp - duration({days: 2}) RETURN CASE WHEN count(e2) > 0 THEN false ELSE true END AS result"
A purchase requisition item must not be created by user_058 within 4 days prior to creating a purchase order item for the same purchase order.,"Activity: [""Create Purchase Requisition Item"", ""Create Purchase Order Item""], EntityType: [""PO""], Actor: [""user_058""]","MATCH (e1:Event {Activity: 'Create Purchase Requisition Item', Actor: 'user_058'})-[:CORR]->(ent:Entity {EntityType: 'PO'}) MATCH (e2:Event {Activity: 'Create Purchase Order Item'})-[:CORR]->(ent) WHERE e1.timestamp >= e2.timestamp - duration({days: 4}) RETURN CASE WHEN count(e2) > 0 THEN false ELSE true END AS result"
user_044 is restricted from changing the quantity of a purchase order within 3 days before an order confirmation is received for the same order.,"Activity: [""Change Quantity"", ""Receive Order Confirmation""], EntityType: [""PO""], Actor: [""user_044""]","MATCH (e1:Event {Activity: 'Change Quantity', Actor: 'user_044'})-[:CORR]->(ent:Entity {EntityType: 'PO'}) MATCH (e2:Event {Activity: 'Receive Order Confirmation'})-[:CORR]->(ent) WHERE e1.timestamp >= e2.timestamp - duration({days: 3}) RETURN CASE WHEN count(e2) > 0 THEN false ELSE true END AS result"
No purchase order item should be created by user_059 within 2 days of a vendor creating an invoice for the same item.,"Activity: [""Create Purchase Order Item"", ""Vendor creates invoice""], EntityType: [""POI""], Actor: [""user_059""]","MATCH (e1:Event {Activity: 'Create Purchase Order Item', Actor: 'user_059'})-[:CORR]->(ent:Entity {EntityType: 'POI'}) MATCH (e2:Event {Activity: 'Vendor creates invoice'})-[:CORR]->(ent) WHERE e1.timestamp >= e2.timestamp - duration({days: 2}) RETURN CASE WHEN count(e2) > 0 THEN false ELSE true END AS result"
It is forbidden for user_007 to record a goods receipt within one day before deleting the related purchase order item.,"Activity: [""Record Goods Receipt"", ""Delete Purchase Order Item""], EntityType: [""POI""], Actor: [""user_007""]","MATCH (e1:Event {Activity: 'Record Goods Receipt', Actor: 'user_007'})-[:CORR]->(ent:Entity {EntityType: 'POI'}) MATCH (e2:Event {Activity: 'Delete Purchase Order Item'})-[:CORR]->(ent) WHERE e1.timestamp >= e2.timestamp - duration({days: 1}) RETURN CASE WHEN count(e2) > 0 THEN false ELSE true END AS result"
user_429 is not allowed to remove the payment block within 3 days of recording an invoice receipt for the corresponding purchase order.,"Activity: [""Remove Payment Block"", ""Record Invoice Receipt""], EntityType: [""PO""], Actor: [""user_429""]","MATCH (e1:Event {Activity: 'Remove Payment Block', Actor: 'user_429'})-[:CORR]->(ent:Entity {EntityType: 'PO'}) MATCH (e2:Event {Activity: 'Record Invoice Receipt'})-[:CORR]->(ent) WHERE e1.timestamp >= e2.timestamp - duration({days: 3}) RETURN CASE WHEN count(e2) > 0 THEN false ELSE true END AS result"
It is prohibited for batch process batch_02 to record a service entry sheet within 2 days of deleting the purchase order item for the same purchase order.,"Activity: [""Record Service Entry Sheet"", ""Delete Purchase Order Item""], EntityType: [""POI""], Actor: [""batch_02""]","MATCH (e1:Event {Activity: 'Record Service Entry Sheet', Actor: 'batch_02'})-[:CORR]->(ent:Entity {EntityType: 'POI'}) MATCH (e2:Event {Activity: 'Delete Purchase Order Item'})-[:CORR]->(ent) WHERE e1.timestamp >= e2.timestamp - duration({days: 2}) RETURN CASE WHEN count(e2) > 0 THEN false ELSE true END AS result"
User user_019 must not record an invoice receipt within 3 days before a goods receipt is recorded for the same purchase order item.,"Activity: [""Record Invoice Receipt"", ""Record Goods Receipt""], EntityType: [""POI""], Actor: [""user_019""]","MATCH (e1:Event {Activity: 'Record Invoice Receipt', Actor: 'user_019'})-[:CORR]->(ent:Entity {EntityType: 'POI'}) MATCH (e2:Event {Activity: 'Record Goods Receipt'})-[:CORR]->(ent) WHERE e1.timestamp >= e2.timestamp - duration({days: 3}) RETURN CASE WHEN count(e2) > 0 THEN false ELSE true END AS result"
At least 3 purchase order items have not yet been deleted.,"Activity: [""Delete Purchase Order Item""], EntityType: [""POI""], Actor: []",MATCH (ent:Entity {EntityType: 'POI'}) WHERE NOT EXISTS { MATCH (event:Event {Activity: 'Delete Purchase Order Item'})-[:CORR]->(ent) } RETURN COUNT(ent) >= 3 AS ruleSatisfied
There are at least 7 purchase orders for which no goods receipt has been recorded.,"Activity: [""Record Goods Receipt""], EntityType: [""PO""], Actor: []",MATCH (ent:Entity {EntityType: 'PO'}) WHERE NOT EXISTS { MATCH (event:Event {Activity: 'Record Goods Receipt'})-[:CORR]->(ent) } RETURN COUNT(ent) >= 7 AS ruleSatisfied
At least 2 purchase orders have not been confirmed via an order confirmation.,"Activity: [""Receive Order Confirmation""], EntityType: [""PO""], Actor: []",MATCH (ent:Entity {EntityType: 'PO'}) WHERE NOT EXISTS { MATCH (event:Event {Activity: 'Receive Order Confirmation'})-[:CORR]->(ent) } RETURN COUNT(ent) >= 2 AS ruleSatisfied
There are at least 6 purchase orders where no payment block has been removed.,"Activity: [""Remove Payment Block""], EntityType: [""PO""], Actor: []",MATCH (ent:Entity {EntityType: 'PO'}) WHERE NOT EXISTS { MATCH (event:Event {Activity: 'Remove Payment Block'})-[:CORR]->(ent) } RETURN COUNT(ent) >= 6 AS ruleSatisfied
At least 8 purchase order items have not yet been cleared from invoices.,"Activity: [""Clear Invoice""], EntityType: [""POI""], Actor: []",MATCH (ent:Entity {EntityType: 'POI'}) WHERE NOT EXISTS { MATCH (event:Event {Activity: 'Clear Invoice'})-[:CORR]->(ent) } RETURN COUNT(ent) >= 8 AS ruleSatisfied
At least 5 purchase orders exist where no invoice receipt has been recorded.,"Activity: [""Record Invoice Receipt""], EntityType: [""PO""], Actor: []",MATCH (ent:Entity {EntityType: 'PO'}) WHERE NOT EXISTS { MATCH (event:Event {Activity: 'Record Invoice Receipt'})-[:CORR]->(ent) } RETURN COUNT(ent) >= 5 AS ruleSatisfied
"There are at least 4 ""POI"" entities for which no ""Delete Purchase Order Item"" event has occurred.","Activity: [""Delete Purchase Order Item""], EntityType: [""POI""], Actor: []",MATCH (ent:Entity {EntityType: 'POI'}) WHERE NOT EXISTS { MATCH (event:Event {Activity: 'Delete Purchase Order Item'})-[:CORR]->(ent) } RETURN COUNT(ent) >= 4 AS ruleSatisfied
"At least 5 ""PO"" entities exist without a ""Receive Order Confirmation"" event.","Activity: [""Receive Order Confirmation""], EntityType: [""PO""], Actor: []",MATCH (ent:Entity {EntityType: 'PO'}) WHERE NOT EXISTS { MATCH (event:Event {Activity: 'Receive Order Confirmation'})-[:CORR]->(ent) } RETURN COUNT(ent) >= 5 AS ruleSatisfied
"There are at least 7 ""POI"" entities that do not have a ""Clear Invoice"" event linked to them.","Activity: [""Clear Invoice""], EntityType: [""POI""], Actor: []",MATCH (ent:Entity {EntityType: 'POI'}) WHERE NOT EXISTS { MATCH (event:Event {Activity: 'Clear Invoice'})-[:CORR]->(ent) } RETURN COUNT(ent) >= 7 AS ruleSatisfied
"At least 4 ""PO"" entities exist for which no ""Record Service Entry Sheet"" event has been performed.","Activity: [""Record Service Entry Sheet""], EntityType: [""PO""], Actor: []",MATCH (ent:Entity {EntityType: 'PO'}) WHERE NOT EXISTS { MATCH (event:Event {Activity: 'Record Service Entry Sheet'})-[:CORR]->(ent) } RETURN COUNT(ent) >= 4 AS ruleSatisfied
No more than 10 purchase order items should be deleted on the same day.,"Activity: [""Delete Purchase Order Item""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Delete Purchase Order Item""}) WITH date(e.timestamp).year AS year, date(e.timestamp).month AS month, date(e.timestamp).day AS day, COUNT(e) AS eventsPerDay RETURN CASE WHEN MAX(eventsPerDay) > 10 THEN false ELSE true END AS ruleSatisfied"
There must not be more than 8 purchase orders created on any single day.,"Activity: [""Create Purchase Order Item""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Create Purchase Order Item""}) WITH date(e.timestamp).year AS year, date(e.timestamp).month AS month, date(e.timestamp).day AS day, COUNT(e) AS eventsPerDay RETURN CASE WHEN MAX(eventsPerDay) > 8 THEN false ELSE true END AS ruleSatisfied"
At most 6 receipts for delivered goods should be recorded per day.,"Activity: [""Record Goods Receipt""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Record Goods Receipt""}) WITH date(e.timestamp).year AS year, date(e.timestamp).month AS month, date(e.timestamp).day AS day, COUNT(e) AS eventsPerDay RETURN CASE WHEN MAX(eventsPerDay) > 6 THEN false ELSE true END AS ruleSatisfied"
The number of recorded service entry sheets should not exceed 3 daily.,"Activity: [""Record Service Entry Sheet""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Record Service Entry Sheet""}) WITH date(e.timestamp).year AS year, date(e.timestamp).month AS month, date(e.timestamp).day AS day, COUNT(e) AS eventsPerDay RETURN CASE WHEN MAX(eventsPerDay) > 3 THEN false ELSE true END AS ruleSatisfied"
No more than 4 order confirmations should be received per day.,"Activity: [""Receive Order Confirmation""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Receive Order Confirmation""}) WITH date(e.timestamp).year AS year, date(e.timestamp).month AS month, date(e.timestamp).day AS day, COUNT(e) AS eventsPerDay RETURN CASE WHEN MAX(eventsPerDay) > 4 THEN false ELSE true END AS ruleSatisfied"
"""Create Purchase Order Item"" should occur no more than 15 times in a week.","Activity: [""Create Purchase Order Item""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Create Purchase Order Item""}) WITH date(e.timestamp).year AS year, date(e.timestamp).week AS week, COUNT(e) AS eventsPerWeek RETURN CASE WHEN MAX(eventsPerWeek) > 15 THEN false ELSE true END AS ruleSatisfied"
"A maximum of 20 ""Record Goods Receipt"" events can occur in a calendar month.","Activity: [""Record Goods Receipt""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Record Goods Receipt""}) WITH date(e.timestamp).year AS year, date(e.timestamp).month AS month, COUNT(e) AS eventsPerMonth RETURN CASE WHEN MAX(eventsPerMonth) > 20 THEN false ELSE true END AS ruleSatisfied"
"""Record Service Entry Sheet"" must not be logged more than 10 times within a fiscal quarter.","Activity: [""Record Service Entry Sheet""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Record Service Entry Sheet""}) WITH date(e.timestamp).year AS year, date(e.timestamp).quarter AS quarter, COUNT(e) AS eventsPerQuarter RETURN CASE WHEN MAX(eventsPerQuarter) > 10 THEN false ELSE true END AS ruleSatisfied"
The company should not process more than 5 invoices in one day.,"Activity: [""Record Invoice Receipt""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Record Invoice Receipt""}) WITH date(e.timestamp).year AS year, date(e.timestamp).month AS month, date(e.timestamp).day AS day, COUNT(e) AS eventsPerDay RETURN CASE WHEN MAX(eventsPerDay) > 5 THEN false ELSE true END AS ruleSatisfied"
"On Mondays in April 2023, purchase requisition items should not be created.","Activity: [""Create Purchase Requisition Item""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Create Purchase Requisition Item""}) WHERE date(e.timestamp).year = 2023 AND date(e.timestamp).month = 4 AND date(e.timestamp).dayOfWeek = 1 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
It is prohibited to register a goods receipt on weekends in Q4 of 2021.,"Activity: [""Record Goods Receipt""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Record Goods Receipt""}) WHERE date(e.timestamp).year = 2021 AND date(e.timestamp).month >= 10 AND date(e.timestamp).month <= 12 AND date(e.timestamp).dayOfWeek IN [6, 7] RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
"Between June and August 2020, vendors must not generate invoices on a Wednesday.","Activity: [""Vendor creates invoice""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Vendor creates invoice""}) WHERE date(e.timestamp).year = 2020 AND date(e.timestamp).month >= 6 AND date(e.timestamp).month <= 8 AND date(e.timestamp).dayOfWeek = 3 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
"Between February and May 2022, order confirmations must not be received on Sundays.","Activity: [""Receive Order Confirmation""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Receive Order Confirmation""}) WHERE date(e.timestamp).year = 2022 AND date(e.timestamp).month >= 2 AND date(e.timestamp).month <= 5 AND date(e.timestamp).dayOfWeek = 7 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
Payment blocks should not be removed in December 2025 on any Thursday.,"Activity: [""Remove Payment Block""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Remove Payment Block""}) WHERE date(e.timestamp).year = 2025 AND date(e.timestamp).month = 12 AND date(e.timestamp).dayOfWeek = 4 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
"The activity ""Create Purchase Requisition Item"" must not be performed on a Monday in March 2021.","Activity: [""Create Purchase Requisition Item""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Create Purchase Requisition Item""}) WHERE date(e.timestamp).year = 2021 AND date(e.timestamp).month = 3 AND date(e.timestamp).dayOfWeek = 1 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
"The event ""Create Purchase Order Item"" is not allowed on weekends in the first half of 2022.","Activity: [""Create Purchase Order Item""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Create Purchase Order Item""}) WHERE date(e.timestamp).year = 2022 AND date(e.timestamp).month >= 1 AND date(e.timestamp).month <= 6 AND date(e.timestamp).dayOfWeek IN [6, 7] RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
"The action ""Record Goods Receipt"" must not happen on a Friday in July 2020.","Activity: [""Record Goods Receipt""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Record Goods Receipt""}) WHERE date(e.timestamp).year = 2020 AND date(e.timestamp).month = 7 AND date(e.timestamp).dayOfWeek = 5 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
"The ""Delete Purchase Order Item"" event must not occur on a Wednesday in Q3 of 2021.","Activity: [""Delete Purchase Order Item""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Delete Purchase Order Item""}) WHERE date(e.timestamp).year = 2021 AND date(e.timestamp).month >= 7 AND date(e.timestamp).month <= 9 AND date(e.timestamp).dayOfWeek = 3 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
"""Record Service Entry Sheet"" should not be recorded on any Sunday in 2025.","Activity: [""Record Service Entry Sheet""], EntityType: [], Actor: []","MATCH (e:Event {Activity: ""Record Service Entry Sheet""}) WHERE date(e.timestamp).year = 2025 AND date(e.timestamp).dayOfWeek = 7 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
Events corresponding to Purchase Order Items may only be processed on Fridays.,"Activity: [], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event) WHERE date(e.timestamp).dayOfWeek <> 5 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
Actions related to POIs must only be handled on Wednesdays.,"Activity: [], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event) WHERE date(e.timestamp).dayOfWeek <> 3 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
All actions on a POI must be executed on Thursdays only.,"Activity: [], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event) WHERE date(e.timestamp).dayOfWeek <> 4 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
Any events concerning a PO should take place exclusively on Sundays.,"Activity: [], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e:Event) WHERE date(e.timestamp).dayOfWeek <> 7 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
Transactions involving POIs are only valid on Saturdays.,"Activity: [], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event) WHERE date(e.timestamp).dayOfWeek <> 6 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
It is not allowed that events correlated to POIs are performed on Tuesdays or Fridays.,"Activity: [], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event) WHERE date(e.timestamp).dayOfWeek IN [2, 5] RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
Events related to a PO must not be processed on Mondays and Thursdays.,"Activity: [], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e:Event) WHERE date(e.timestamp).dayOfWeek IN [1, 4] RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
Activities concerning POIs cannot be worked on Sundays and Wednesdays.,"Activity: [], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event) WHERE date(e.timestamp).dayOfWeek IN [7, 3] RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
No event linked to a PO may be handled on Saturdays and Tuesdays.,"Activity: [], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e:Event) WHERE date(e.timestamp).dayOfWeek IN [6, 2] RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
Actions regarding Purchase Order Items cannot be processed on Mondays and Fridays.,"Activity: [], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event) WHERE date(e.timestamp).dayOfWeek IN [1, 5] RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
A POI must not be worked on during the period from 5 PM to 11 AM.,"Activity: [], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event) WHERE (time(e.timestamp).hour >= 17 OR time(e.timestamp).hour < 11) RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
No events related to PO may occur between 3 PM and 9 AM.,"Activity: [], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e:Event) WHERE (time(e.timestamp).hour >= 15 OR time(e.timestamp).hour < 9) RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
No POI may be handled from 8 AM until 2 PM.,"Activity: [], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event) WHERE time(e.timestamp).hour >= 8 AND time(e.timestamp).hour < 14 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
A PO is prohibited from being worked on between 11 PM and 6 AM.,"Activity: [], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e:Event) WHERE (time(e.timestamp).hour >= 23 OR time(e.timestamp).hour < 6) RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
"Between 10 AM and 5 PM, no actions should occur for any POI.","Activity: [], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event) WHERE time(e.timestamp).hour >= 10 AND time(e.timestamp).hour < 17 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
PO entities should not be processed from 1 AM to 4 AM.,"Activity: [], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e:Event) WHERE time(e.timestamp).hour >= 1 AND time(e.timestamp).hour < 4 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
No events on POIs are allowed between 6 PM and 9 AM.,"Activity: [], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event) WHERE (time(e.timestamp).hour >= 18 OR time(e.timestamp).hour < 9) RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
POs must not be worked on during the time between 12 PM and 3 PM.,"Activity: [], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e:Event) WHERE time(e.timestamp).hour >= 12 AND time(e.timestamp).hour < 15 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
"Between 7 AM and 11 AM, it is not allowed to work on POIs.","Activity: [], EntityType: [""POI""], Actor: []","MATCH (ent:Entity {EntityType: ""POI""})<-[:CORR]-(e:Event) WHERE time(e.timestamp).hour >= 7 AND time(e.timestamp).hour < 11 RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
Purchase Orders should never be worked on from 9 PM to 5 AM.,"Activity: [], EntityType: [""PO""], Actor: []","MATCH (ent:Entity {EntityType: ""PO""})<-[:CORR]-(e:Event) WHERE (time(e.timestamp).hour >= 21 OR time(e.timestamp).hour < 5) RETURN CASE WHEN COUNT(e) > 0 THEN false ELSE true END AS ruleSatisfied"
A Purchase Order Item created on a Monday cannot be invoiced on a Friday.,"Activity: [""Create Purchase Order Item"", ""Vendor creates invoice""], EntityType: [""POI""], Actor: []","MATCH (e1:Event {Activity: ""Create Purchase Order Item""})-[:CORR]->(ent:Entity {EntityType: ""POI""}) MATCH (e2:Event {Activity: ""Vendor creates invoice""})-[:CORR]->(ent) WHERE date(e1.timestamp).dayOfWeek = 1 AND date(e2.timestamp).dayOfWeek = 5 RETURN CASE WHEN COUNT(ent)>0 THEN false ELSE true END AS ruleSatisfied"
A Purchase Order Item must not be deleted on a Thursday if an invoice receipt is recorded on a Tuesday.,"Activity: [""Delete Purchase Order Item"", ""Record Invoice Receipt""], EntityType: [""POI""], Actor: []","MATCH (e1:Event {Activity: ""Record Invoice Receipt""})-[:CORR]->(ent:Entity {EntityType: ""POI""}) MATCH (e2:Event {Activity: ""Delete Purchase Order Item""})-[:CORR]->(ent) WHERE date(e1.timestamp).dayOfWeek = 2 AND date(e2.timestamp).dayOfWeek = 4 RETURN CASE WHEN COUNT(ent)>0 THEN false ELSE true END AS ruleSatisfied"
A Purchase Order cannot have an invoice receipt recorded on a Wednesday before the goods receipt on a Friday.,"Activity: [""Record Invoice Receipt"", ""Record Goods Receipt""], EntityType: [""PO""], Actor: []","MATCH (e1:Event {Activity: ""Record Goods Receipt""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) MATCH (e2:Event {Activity: ""Record Invoice Receipt""})-[:CORR]->(ent) WHERE date(e1.timestamp).dayOfWeek = 5 AND date(e2.timestamp).dayOfWeek = 3 RETURN CASE WHEN COUNT(ent)>0 THEN false ELSE true END AS ruleSatisfied"
A Purchase Order Item cannot be changed on a Monday if the invoice is cleared on a Friday.,"Activity: [""Change Quantity"", ""Clear Invoice""], EntityType: [""POI""], Actor: []","MATCH (e1:Event {Activity: ""Clear Invoice""})-[:CORR]->(ent:Entity {EntityType: ""POI""}) MATCH (e2:Event {Activity: ""Change Quantity""})-[:CORR]->(ent) WHERE date(e1.timestamp).dayOfWeek = 5 AND date(e2.timestamp).dayOfWeek = 1 RETURN CASE WHEN COUNT(ent)>0 THEN false ELSE true END AS ruleSatisfied"
A Purchase Order Item cannot be deleted on a Tuesday if the payment block is removed on a Thursday.,"Activity: [""Delete Purchase Order Item"", ""Remove Payment Block""], EntityType: [""POI""], Actor: []","MATCH (e1:Event {Activity: ""Remove Payment Block""})-[:CORR]->(ent:Entity {EntityType: ""POI""}) MATCH (e2:Event {Activity: ""Delete Purchase Order Item""})-[:CORR]->(ent) WHERE date(e1.timestamp).dayOfWeek = 4 AND date(e2.timestamp).dayOfWeek = 2 RETURN CASE WHEN COUNT(ent)>0 THEN false ELSE true END AS ruleSatisfied"
A Vendor creates invoice event on a Monday must not occur if a Create Purchase Order Item event for the same POI occurred on a Thursday.,"Activity: [""Vendor creates invoice"", ""Create Purchase Order Item""], EntityType: [""POI""], Actor: []","MATCH (e1:Event {Activity: ""Create Purchase Order Item""})-[:CORR]->(ent:Entity {EntityType: ""POI""}) MATCH (e2:Event {Activity: ""Vendor creates invoice""})-[:CORR]->(ent) WHERE date(e1.timestamp).dayOfWeek = 4 AND date(e2.timestamp).dayOfWeek = 1 RETURN CASE WHEN COUNT(ent)>0 THEN false ELSE true END AS ruleSatisfied"
A Purchase Order Item should not be deleted on a Wednesday if an Invoice Receipt was recorded for this POI on a Friday.,"Activity: [""Delete Purchase Order Item"", ""Record Invoice Receipt""], EntityType: [""POI""], Actor: []","MATCH (e1:Event {Activity: ""Record Invoice Receipt""})-[:CORR]->(ent:Entity {EntityType: ""POI""}) MATCH (e2:Event {Activity: ""Delete Purchase Order Item""})-[:CORR]->(ent) WHERE date(e1.timestamp).dayOfWeek = 5 AND date(e2.timestamp).dayOfWeek = 3 RETURN CASE WHEN COUNT(ent)>0 THEN false ELSE true END AS ruleSatisfied"
A Record Goods Receipt cannot be done on a Friday if a Remove Payment Block event for this PO occurred on a Tuesday.,"Activity: [""Record Goods Receipt"", ""Remove Payment Block""], EntityType: [""PO""], Actor: []","MATCH (e1:Event {Activity: ""Remove Payment Block""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) MATCH (e2:Event {Activity: ""Record Goods Receipt""})-[:CORR]->(ent) WHERE date(e1.timestamp).dayOfWeek = 2 AND date(e2.timestamp).dayOfWeek = 5 RETURN CASE WHEN COUNT(ent)>0 THEN false ELSE true END AS ruleSatisfied"
A Purchase Order should not be confirmed on a Wednesday if the Purchase Order Item for the PO was created on a Monday.,"Activity: [""Receive Order Confirmation"", ""Create Purchase Order Item""], EntityType: [""PO""], Actor: []","MATCH (e1:Event {Activity: ""Create Purchase Order Item""})-[:CORR]->(ent:Entity {EntityType: ""PO""}) MATCH (e2:Event {Activity: ""Receive Order Confirmation""})-[:CORR]->(ent) WHERE date(e1.timestamp).dayOfWeek = 1 AND date(e2.timestamp).dayOfWeek = 3 RETURN CASE WHEN COUNT(ent)>0 THEN false ELSE true END AS ruleSatisfied"
A Change Quantity event for a POI must not occur on a Monday if a Clear Invoice action for the same POI has already taken place on a Thursday.,"Activity: [""Change Quantity"", ""Clear Invoice""], EntityType: [""POI""], Actor: []","MATCH (e1:Event {Activity: ""Clear Invoice""})-[:CORR]->(ent:Entity {EntityType: ""POI""}) MATCH (e2:Event {Activity: ""Change Quantity""})-[:CORR]->(ent) WHERE date(e1.timestamp).dayOfWeek = 4 AND date(e2.timestamp).dayOfWeek = 1 RETURN CASE WHEN COUNT(ent)>0 THEN false ELSE true END AS ruleSatisfied"
